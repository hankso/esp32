{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "/config.schema.json",
  "title": "ESP Base Config",
  "description": "Generated from espbase/main/config.h",
  "type": "object",
  "properties": {
    "sys.dir.data": {
      "description": "Directory to storage font, image files etc.",
      "type": "string"
    },
    "sys.dir.docs": {
      "description": "Directory to generated documentation",
      "type": "string"
    },
    "sys.dir.html": {
      "description": "Directory to static webpage files",
      "type": "string"
    },
    "sys.btn.high": {
      "description": "Button active high",
      "type": "string",
      "pattern": "^[01yn]?$"
    },
    "sys.usb.mode": {
      "description": "Select USB work mode",
      "enum": [
        "SERIAL_JTAG",
        "CDC_DEVICE",
        "CDC_HOST",
        "MSC_DEVICE",
        "MSC_HOST",
        "HID_DEVICE",
        "HID_HOST"
      ]
    },
    "sys.bt.mode": {
      "description": "Select BT work mode",
      "enum": [
        "BT_HIDD",
        "BLE_HIDD",
        "BLE_HIDH"
      ]
    },
    "sys.bt.scan": {
      "description": "Bluetooth discoverable",
      "type": "string",
      "pattern": "^[01yn]?$"
    },
    "net.sta.ssid": {
      "description": "SSID of the AP to connect after startup",
      "type": "string",
      "anyOf": [
        { "format": "hostname" },
        { "maxLength": 0 }
      ]
    },
    "net.sta.pass": {
      "description": "Password of the AP to connect",
      "type": "string",
      "anyOf": [
        { "pattern": "^[0-9a-zA-Z]{8,}$" },
        { "maxLength": 0 }
      ]
    },
    "net.sta.host": {
      "description": "Static IP address (ignore DHCP)",
      "type": "string",
      "anyOf": [
        { "format": "ipv4" },
        { "maxLength": 0 }
      ]
    },
    "net.ap.ssid": {
      "description": "SSID of the AP to serve (hotspot name)",
      "type": "string",
      "anyOf": [
        { "format": "hostname" },
        { "maxLength": 0 }
      ]
    },
    "net.ap.pass": {
      "description": "Password of the AP to serve",
      "type": "string",
      "anyOf": [
        { "pattern": "^[0-9a-zA-Z]{8,}$" },
        { "maxLength": 0 }
      ]
    },
    "net.ap.host": {
      "description": "IP address of Gateway",
      "type": "string",
      "anyOf": [
        { "format": "ipv4" },
        { "maxLength": 0 }
      ]
    },
    "net.ap.hide": {
      "description": "Hide AP SSID (not shown on scan)",
      "type": "string",
      "pattern": "^[01yn]?$"
    },
    "net.ap.auto": {
      "description": "Switch to AP mode if STA connection failed",
      "type": "string",
      "pattern": "^[01yn]?$"
    },
    "net.sc.auto": {
      "description": "Enable SmartConfig if STA connection failed",
      "type": "string",
      "pattern": "^[01yn]?$"
    },
    "web.ws.name": {
      "description": "Username to auth websocket connection",
      "type": "string"
    },
    "web.ws.pass": {
      "description": "Password to auth websocket connection",
      "type": "string",
      "anyOf": [
        { "pattern": "^[0-9a-zA-Z]{8,}$" },
        { "maxLength": 0 }
      ]
    },
    "web.http.name": {
      "description": "Username to auth webserver (HTTP)",
      "type": "string"
    },
    "web.http.pass": {
      "description": "Password to auth webserver (HTTP)",
      "type": "string",
      "anyOf": [
        { "pattern": "^[0-9a-zA-Z]{8,}$" },
        { "maxLength": 0 }
      ]
    },
    "web.auth.base": {
      "description": "Use basic HTTP authorization method (base64)",
      "type": "string",
      "pattern": "^[01yn]?$"
    },
    "app.mdns.run": {
      "description": "Enable mDNS server",
      "type": "string",
      "pattern": "^[01yn]?$"
    },
    "app.mdns.host": {
      "description": "Register mDNS hostname",
      "type": "string",
      "anyOf": [
        { "format": "hostname" },
        { "maxLength": 0 }
      ]
    },
    "app.sntp.run": {
      "description": "Enable SNTP service",
      "type": "string",
      "pattern": "^[01yn]?$"
    },
    "app.sntp.host": {
      "description": "NTP server to sync time from",
      "type": "string",
      "anyOf": [
        { "format": "hostname" },
        { "maxLength": 0 }
      ]
    },
    "app.ota.auto": {
      "description": "Enable auto updation checking",
      "type": "string",
      "pattern": "^[01yn]?$"
    },
    "app.ota.url": {
      "description": "URL to fetch firmware from",
      "type": "string",
      "anyOf": [
        { "format": "uri-reference" },
        { "maxLength": 0 }
      ]
    },
    "app.timezone": {
      "description": "Set local timezone (see tzset(3) man)",
      "type": "string"
    },
    "app.prompt": {
      "description": "Console promption string",
      "type": "string",
      "pattern": "^[0-9a-zA-Z >$]+$"
    }
  }
}
